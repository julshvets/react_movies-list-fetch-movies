{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","helpers.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","movieData","setMovieData","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","isError","setIsError","_useState9","_useState10","errorMessage","setErrorMessage","newMovie","useMemo","movieInfo","Title","Plot","Poster","imdbID","concat","normalizeMovieData","canShowElement","_Fragment","onSubmit","event","preventDefault","query","normalizedQuery","trim","fetch","then","res","json","catch","Response","Error","result","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","isNewMovieInMovies","some","prevMovies","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18ec2679.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\n\nexport const normalizeMovieData = (movieInfo: MovieData) => {\n  const {\n    Title,\n    Plot,\n    Poster,\n    imdbID,\n  } = movieInfo;\n\n  const baseImdbUrl = 'https://www.imdb.com/title/';\n  const defaultImgUrl = (\n    'https://via.placeholder.com/360x270.png?text=no%20preview'\n  );\n\n  return ({\n    title: Title,\n    description: Plot,\n    imgUrl: Poster !== 'N/A' ? Poster : defaultImgUrl,\n    imdbUrl: `${baseImdbUrl}${imdbID}`,\n    imdbId: imdbID,\n  });\n};\n","import React, { useMemo, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\nimport { normalizeMovieData } from '../../helpers';\n\ninterface Props {\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n  movies: Movie[];\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  setMovies,\n  movies,\n}) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movieData, setMovieData] = useState<MovieData | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n\n  const handleChangeSearchInput = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setSearchQuery(event.target.value);\n    setIsError(false);\n    setErrorMessage(null);\n  };\n\n  const handleSubmitButton = (\n    event: React.FormEvent<HTMLFormElement>,\n  ) => {\n    event.preventDefault();\n    const normalizedQuery = searchQuery.trim();\n\n    if (!normalizedQuery) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    getMovie(normalizedQuery)\n      .then((result => {\n        if ('Error' in result) {\n          setIsError(true);\n          setErrorMessage('Can\\'t find a movie with such a title');\n        } else {\n          setMovieData(result);\n          setIsError(false);\n        }\n      }))\n      .finally(() => setIsLoading(false));\n  };\n\n  const newMovie = useMemo(() => {\n    if (movieData) {\n      return normalizeMovieData(movieData);\n    }\n\n    return null;\n  }, [movieData]);\n\n  const clearForm = () => {\n    setMovieData(null);\n    setSearchQuery('');\n  };\n\n  const handleClickAddButton = () => {\n    const isNewMovieInMovies = movies.some(\n      movie => movie.imdbId === newMovie?.imdbId,\n    );\n\n    if (isNewMovieInMovies) {\n      setIsError(true);\n      setErrorMessage('You can\\'t add the same movie to your movie list twice');\n    }\n\n    if (newMovie && !isNewMovieInMovies) {\n      setMovies((prevMovies) => [...prevMovies, newMovie]);\n    }\n\n    clearForm();\n  };\n\n  const canShowElement = !isError && movieData;\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmitButton}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={searchQuery}\n              onChange={handleChangeSearchInput}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorMessage}\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!searchQuery}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {canShowElement && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleClickAddButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      {canShowElement && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=fc937818';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}